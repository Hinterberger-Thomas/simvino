CREATE Table USERS(
  user_id SERIAL UNIQUE PRIMARY KEY,
  EMAIL TEXT UNIQUE NOT NULL,
  PASSWORD TEXT NOT NULL,
  ROLE TEXT NOT NULL
);
CREATE Table CRYPTO(
  crypto_Id SERIAL UNIQUE PRIMARY KEY,
  ASSET_Id TEXT UNIQUE NOT NULL,
  IS_CRYPTO INT NOT NULL,
  ASSET_Name TEXT UNIQUE NOT NULL,
  CURRENT_PRICE decimal NOT NULL
);
CREATE Table CRYPTO_HISTORY(
  Crypto_History_Id BIGSERIAL UNIQUE PRIMARY KEY,
  PRICE decimal NOT NULL,
  fk_ASSET_Id TEXT NOT NULL,
  DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (fk_ASSET_Id) REFERENCES CRYPTO (ASSET_Id)
);
CREATE Table USERS_ASSETS(
  User_Assets_ID SERIAL UNIQUE PRIMARY KEY,
  fk_crypto_Id int UNIQUE NOT NULL,
  fk_user_id int UNIQUE NOT NULL,
  amount decimal NOT NULL,
  FOREIGN KEY (fk_crypto_Id) REFERENCES CRYPTO(crypto_Id),
  FOREIGN KEY (fk_user_id) REFERENCES users(user_id)
);
CREATE Table USERS_SESSIONS(
  USERS_SESSIONS_ID SERIAL UNIQUE PRIMARY KEY,
  fk_user_id int UNIQUE NOT NULL,
  SESSION_ID TEXT NOT NULL,
  FOREIGN KEY (fk_user_id) REFERENCES users(user_id)
);
CREATE Table USERS_TRANSACTION(
  USERS_TRANSACTION_ID BIGSERIAL UNIQUE PRIMARY KEY,
  fk_user_id int UNIQUE NOT NULL,
  SESSION_ID TEXT NOT NULL,
  FOREIGN KEY (fk_user_id) REFERENCES users(user_id)
);